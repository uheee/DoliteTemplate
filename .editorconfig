###############################
# Core EditorConfig Options   #
###############################

root = true

# All files
[*]
indent_style = space

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = false
charset = utf-8

###############################
# .NET Coding Conventions     #
###############################

[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true

# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# Naming Conventions          #
###############################

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_naming_style.i_pascal_case_style.capitalization = pascal_case
dotnet_naming_style.i_pascal_case_style.required_prefix = I

dotnet_naming_style.t_pascal_case_style.capitalization = pascal_case
dotnet_naming_style.t_pascal_case_style.required_prefix = T

dotnet_naming_style.camel_case_style.capitalization = camel_case

dotnet_naming_style.underline_camel_case_style.capitalization = camel_case
dotnet_naming_style.underline_camel_case_style.required_prefix = _

# Rule Definitions
dotnet_naming_rule.namespace_and_type_should_be_pascal_case.severity = warning
dotnet_naming_rule.namespace_and_type_should_be_pascal_case.symbols = namespace_and_type
dotnet_naming_rule.namespace_and_type_should_be_pascal_case.style = pascal_case_style

dotnet_naming_rule.method_and_function_should_be_pascal_case.severity = warning
dotnet_naming_rule.method_and_function_should_be_pascal_case.symbols = method_and_function
dotnet_naming_rule.method_and_function_should_be_pascal_case.style = pascal_case_style

dotnet_naming_rule.property_and_event_should_be_pascal_case.severity = warning
dotnet_naming_rule.property_and_event_should_be_pascal_case.symbols = property_and_event
dotnet_naming_rule.property_and_event_should_be_pascal_case.style = pascal_case_style

dotnet_naming_rule.non_private_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_field_should_be_pascal_case.symbols = non_private_field
dotnet_naming_rule.non_private_field_should_be_pascal_case.style = pascal_case_style

dotnet_naming_rule.constant_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.constant_field_should_be_pascal_case.symbols = constant_field
dotnet_naming_rule.constant_field_should_be_pascal_case.style = pascal_case_style

dotnet_naming_rule.static_readonly_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_readonly_field_should_be_pascal_case.symbols = static_readonly_field
dotnet_naming_rule.static_readonly_field_should_be_pascal_case.style = pascal_case_style

dotnet_naming_rule.interface_should_be_i_pascal_case.severity = warning
dotnet_naming_rule.interface_should_be_i_pascal_case.symbols = interface
dotnet_naming_rule.interface_should_be_i_pascal_case.style = i_pascal_case_style

dotnet_naming_rule.type_parameter_should_be_t_pascal_case.severity = warning
dotnet_naming_rule.type_parameter_should_be_t_pascal_case.symbols = type_parameter
dotnet_naming_rule.type_parameter_should_be_t_pascal_case.style = t_pascal_case_style

dotnet_naming_rule.local_and_parameter_should_be_camel_case.severity = warning
dotnet_naming_rule.local_and_parameter_should_be_camel_case.symbols = local_and_parameter
dotnet_naming_rule.local_and_parameter_should_be_camel_case.style = camel_case_style

dotnet_naming_rule.private_field_should_be_underline_camel_case.severity = warning
dotnet_naming_rule.private_field_should_be_underline_camel_case.symbols = private_field
dotnet_naming_rule.private_field_should_be_underline_camel_case.style = underline_camel_case_style

# Symbol Definitions
dotnet_naming_symbols.namespace_and_type.applicable_kinds = namespace, class, struct, enum
dotnet_naming_symbols.namespace_and_type.applicable_accessibilities = *

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *

dotnet_naming_symbols.type_parameter.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter.applicable_accessibilities = *

dotnet_naming_symbols.method_and_function.applicable_kinds = method, local_function
dotnet_naming_symbols.method_and_function.applicable_accessibilities = *

dotnet_naming_symbols.property_and_event.applicable_kinds = property, event
dotnet_naming_symbols.property_and_event.applicable_accessibilities = *

dotnet_naming_symbols.local_and_parameter.applicable_kinds = local, parameter
dotnet_naming_symbols.local_and_parameter.applicable_accessibilities = *

dotnet_naming_symbols.non_private_field.applicable_kinds = field
dotnet_naming_symbols.non_private_field.applicable_accessibilities = public, internal, protected, protected_internal

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private

dotnet_naming_symbols.constant_field.applicable_kinds = field
dotnet_naming_symbols.constant_field.applicable_accessibilities = *
dotnet_naming_symbols.constant_field.required_modifiers = const

dotnet_naming_symbols.static_readonly_field.applicable_kinds = field
dotnet_naming_symbols.static_readonly_field.applicable_accessibilities = *
dotnet_naming_symbols.static_readonly_field.required_modifiers = static, readonly

###############################
# C# Coding Conventions       #
###############################

[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent

# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

###############################
# C# Formatting Rules         #
###############################

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true